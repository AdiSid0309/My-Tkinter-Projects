from tkinter import *
from tkinter import Tk,StringVar,ttk
from tkinter import messagebox
import tkinter.messagebox as tkMessageBox
import tkinter as tk
import random
import time
import dateandtime
import sqlite3

root=Tk()
root.geometry("1340x740+0+0")
root.title("SIMONI METRO RESERVATION")
root.configure(background='black')


Tops=Frame(root,width=1350,height=100,bd=14,relief='raise')
Tops.pack(side=TOP)
f1=Frame(root,width=900,height=650,bd=10,relief="raise")
f1.pack(side=LEFT)
f2=Frame(root,width=440,height=650,bd=10,relief="raise")
f2.pack(side=RIGHT)

frameTopRight=Frame(f2,width=440,height=650,bd=12,background='indigo',relief="raise")
frameTopRight.pack(side=TOP)
frameBottomRight=Frame(f2,width=440,height=650,bd=16,background='indigo',relief="raise")
frameBottomRight.pack(side=BOTTOM)

f1a=Frame(f1,width=900,height=330,bd=0,background='black',relief="raise")
f1a.pack(side=TOP)
f2a=Frame(f1,width=1000,height=360,bd=0,background='black',relief="raise")
f2a.pack(side=BOTTOM)

topLeft1=Frame(f1a,width=300,height=200,bd=8,background='orange',relief="raise")
topLeft1.pack(side=LEFT)
topLeft2=Frame(f1a,width=300,height=200,bd=8,background='yellow',relief="raise")
topLeft2.pack(side=RIGHT)
topLeft3=Frame(f1a,width=300,height=200,bd=8,background='light blue',relief="raise")
topLeft3.pack(side=RIGHT)


#---------------------------------------------------------------
bottomLeft1=Frame(f2a,width=450,height=450,bd=14,background='light green',relief="raise")
bottomLeft1.pack(side=LEFT)
bottomLeft2=Frame(f2a,width=450,height=450,bd=14,background='red',relief="raise")
bottomLeft2.pack(side=RIGHT)
#---------------------------------------------------------------
Tops.configure(background="pink")
f1.configure(background="black")
f2.configure(background="pink")
lblTitle=Label(Tops,font=('arial',40,'bold'),text="SIMONI METRO RESERVATIONS",bd=12,background='blue',width=41,justify='center')
lblTitle.grid(row=0,column=0)

Date1= StringVar()
timer = StringVar()
Receipt_Ref = StringVar()
Receipt_Ref.set("")
#-----------------------------
Ticketclass = StringVar()
TicketPrice = StringVar()
Child_Ticket = StringVar()
Adult_Ticket = StringVar()
From_Destination = StringVar()
To_Destination = StringVar()
Fee_Price = StringVar()
Route= StringVar()
Receipt_Ref= StringVar()
Ticketclass.set(" ")
TicketPrice.set(" ")
Child_Ticket.set(" ")
Adult_Ticket.set(" ")
From_Destination.set(" ")
To_Destination.set(" ")
Fee_Price.set(" ")
Route.set(" ")
Receipt_Ref.set(" ")
#---------------------------------------------------------------
lblReceipt=Label(frameTopRight,font=('arial',12, 'bold'),text="Travelling Ticketing Systems",background='indigo',width = 32, relief="sunken", justify='center')
lblReceipt.grid(row=0,column=0)

lblClass1=Label(frameBottomRight,font=('arial',10, 'bold'),text="Class",background='orange', width = 8, relief="sunken", justify='center')
lblClass1.grid(row=0,column=0)
lblClass2=Label(frameBottomRight,font=('arial',10, 'bold'),width = 8, relief="sunken",background='orange',textvariable=Ticketclass, justify='center')
lblClass2.grid(row=1,column=0)

lblTicket1=Label(frameBottomRight,font=('arial',10, 'bold'),text="Ticket",background='light blue', width = 8, relief="sunken", justify='center') 
lblTicket1.grid(row=0,column=1)
lblTicket2=Label(frameBottomRight,font=('arial',10, 'bold'), width = 8, relief="sunken",background='light blue',textvariable=Fee_Price,justify='center') 
lblTicket2.grid(row=1,column=1)

lblAdult1=Label(frameBottomRight,font=('arial',10, 'bold'),text="Adult",background='yellow', width = 8, relief="sunken", justify='center') 
lblAdult1.grid(row=0,column=2)
lblAdult2=Label(frameBottomRight,font=('arial',10, 'bold'), width = 8, relief="sunken",background='yellow',textvariable=Adult_Ticket ,justify='center') 
lblAdult2.grid(row=1,column=2)

lblChild1=Label(frameBottomRight,font=('arial',10, 'bold'),text="Child",background='light green', width = 8, relief="sunken", justify='center') 
lblChild1.grid(row=0,column=3)
lblChild2=Label(frameBottomRight,font=('arial',10, 'bold'), width = 8, relief="sunken",background='light green',textvariable=Child_Ticket ,justify='center') 
lblChild2.grid(row=1,column=3)

lblFrom1=Label(frameBottomRight,font=('arial',10, 'bold'),text="From",background='light blue', width = 8, relief="sunken", justify='center') 
lblFrom1.grid(row=2,column=1)
lblFrom2=Label(frameBottomRight,font=('arial',10, 'bold'), width = 8, relief="sunken",background='yellow',textvariable=From_Destination ,justify='center') 
lblFrom2.grid(row=2,column=2)
#---------------------------------Spacing
lblTo1=Label(frameBottomRight,font=('arial',10, 'bold'),text="To",background='light blue', width = 8, relief="sunken", justify='center') 
lblTo1.grid(row=3,column=1)
lblTo2=Label(frameBottomRight,font=('arial',10, 'bold'), width = 8, relief="sunken",background='yellow',textvariable=To_Destination, justify='center') 
lblTo2.grid(row=3,column=2)
lblPrice1=Label(frameBottomRight,font=('arial',10, 'bold'),text="Price",background='light blue', width = 8,relief = 'sunken', justify='center') 
lblPrice1.grid(row=4,column=1)
lblPrice2=Label(frameBottomRight,font=('arial',10, 'bold'), width = 8, relief = 'sunken',background='yellow',textvariable=TicketPrice,justify='center') 
lblPrice2.grid(row=4,column=2)
#---------------------------Spacing
lblRefno1=Label(frameBottomRight,font=('arial',10, 'bold'),text="RefNo",background='orange', width = 8,relief = 'sunken', justify='center') 
lblRefno1.grid(row=5,column=0)
lblRefno2=Label(frameBottomRight,font=('arial',10, 'bold'), width = 8, relief = 'sunken',background='orange',textvariable=Receipt_Ref,justify='center') 
lblRefno2.grid(row=6,column=0)
lblTime1=Label(frameBottomRight,font=('arial',10, 'bold'),text="Time",background='light blue', width = 8,relief = 'sunken', justify='center') 
lblTime1.grid(row=5,column=1)
lblTime2=Label(frameBottomRight,font=('arial',10, 'bold'), width = 8, relief = 'sunken', background='light blue',textvariable=timer, justify='center') 
lblTime2.grid(row=6,column=1)
lblDate1=Label(frameBottomRight,font=('arial',10, 'bold'),text="Date",background='yellow', width = 8,relief = 'sunken', justify='center') 
lblDate1.grid(row=5,column=2) 
lblDate2=Label(frameBottomRight,font=('arial',10, 'bold'), width = 8, relief = 'sunken', background='yellow',textvariable=Date1, justify='center') 
lblDate2.grid(row=6,column=2)
lblRoute1=Label(frameBottomRight,font=('arial',10, 'bold'),text="Route",background='light green', width = 8,relief = 'sunken', justify='center') 
lblRoute1.grid(row=5,column=3) 
lblRoute2=Label(frameBottomRight,font=('arial',10, 'bold'), width = 8, relief = 'sunken',background='light green',textvariable=Route, justify='center') 
lblRoute2.grid(row=6,column=3)

#----------------------------Functions-----------------------------------
def Database():
    conn = sqlite3.connect("record.db")
    cursor = conn.cursor()
    cursor.execute("CREATE TABLE IF NOT EXISTS `info` (mem_id INTEGER NOT NULL  PRIMARY KEY AUTOINCREMENT, name TEXT, age TEXT, tickets TEXT, ticket_id TEXT, price TEXT, contact TEXT)")
    cursor.execute("SELECT * FROM `info` ORDER BY `name` ASC")
    fetch = cursor.fetchall()
    for data in fetch:
        tree.insert('', 'end', values=(data))
    cursor.close()
    conn.close()
def SubmitData():
    if  NAME.get() == "" or AGE.get() == "" or TICKETS.get() == "" or TICKET_ID.get() == "" or PRICE.get() == "" or CONTACT.get() == "":
        result = tkMessageBox.showwarning('', 'Please Complete The Required Field', icon="warning")
    else:
        tree.delete(*tree.get_children())
        conn = sqlite3.connect("record.db")
        cursor = conn.cursor()
        cursor.execute("INSERT INTO `info` (name, age, tickets, ticket_id, price, contact) VALUES(?, ?, ?, ?, ?, ?)", (str(NAME.get()), str(AGE.get()), str(TICKETS.get()), str(TICKET_ID.get()), str(PRICE.get()), str(CONTACT.get())))
        conn.commit()
        cursor.execute("SELECT * FROM `info` ORDER BY `name` ASC")
        fetch = cursor.fetchall()
        for data in fetch:
            tree.insert('', 'end', values=(data))
        cursor.close()
        conn.close()
        NAME.set("")
        AGE.set("")
        TICKETS.set("")
        TICKET_ID.set("")
        PRICE.set("")
        CONTACT.set("")
def UpdateData():
    if TICKETS.get() == "":
       result = tkMessageBox.showwarning('', 'Please Complete The Required Field', icon="warning")
    else:
        tree.delete(*tree.get_children())
        conn = sqlite3.connect("record.db")
        cursor = conn.cursor()
        cursor.execute("UPDATE `info` SET `name` = ?, `age` = ?, `tickets` =?, `ticket_id` = ?,  `price` = ?, `contact` = ? WHERE `mem_id` = ?", (str(NAME.get()), str(AGE.get()), str(TICKETS.get()), str(TICKET_ID.get()), str(PRICE.get()), str(CONTACT.get()), int(mem_id)))
        conn.commit()
        cursor.execute("SELECT * FROM `info` ORDER BY `name` ASC")
        fetch = cursor.fetchall()
        for data in fetch:
            tree.insert('', 'end', values=(data))
        cursor.close()
        conn.close()
        NAME.set("")
        AGE.set("")
        TICKETS.set("")
        TICKET_ID.set("")
        PRICE.set("")
        CONTACT.set("")
def OnSelected(event):
    global mem_id, UpdateWindow
    curItem = tree.focus()
    contents =(tree.item(curItem))
    selecteditem = contents['values']
    mem_id = selecteditem[0]
    NAME.set("")
    AGE.set("")
    TICKETS.set("")
    TICKET_ID.set("")
    PRICE.set("")
    CONTACT.set("")
    NAME.set(selecteditem[1])
    AGE.set(selecteditem[2])
    TICKETS.set(selecteditem[3])
    TICKET_ID.set(selecteditem[4])
    PRICE.set(selecteditem[5])
    CONTACT.set(selecteditem[6])
    UpdateWindow = Toplevel()
    UpdateWindow.title("Contact List")
    width = 400
    height = 300
    screen_width = root.winfo_screenwidth()
    screen_height = root.winfo_screenheight()
    x = ((screen_width/2) + 450) - (width/2)
    y = ((screen_height/2) + 20) - (height/2)
    UpdateWindow.resizable(0, 0)
    UpdateWindow.geometry("%dx%d+%d+%d" % (width, height, x, y))
    if 'NewWindow' in globals():
        NewWindow.destroy()
    #===================FRAMES==============================
    FormTitle = Frame(UpdateWindow)
    FormTitle.pack(side=TOP)
    ContactForm = Frame(UpdateWindow)
    ContactForm.pack(side=TOP, pady=10)
    #===================LABELS==============================
    lbl_title = Label(FormTitle, text="Updating Contacts", font=('arial', 16), bg="orange",  width = 300)
    lbl_title.pack(fill=X)
    lbl_name = Label(ContactForm, text="Name", font=('arial', 14), bd=5)
    lbl_name.grid(row=0, sticky=W)
    lbl_age = Label(ContactForm, text="Age", font=('arial', 14), bd=5)
    lbl_age.grid(row=1, sticky=W)
    lbl_tickets = Label(ContactForm, text="Tickets", font=('arial', 14), bd=5)
    lbl_tickets.grid(row=2, sticky=W)
    lbl_ticket_id = Label(ContactForm, text="Ticket_id", font=('arial', 14), bd=5)
    lbl_ticket_id.grid(row=3, sticky=W)
    lbl_price = Label(ContactForm, text="Price", font=('arial', 14), bd=5)
    lbl_price.grid(row=4, sticky=W)
    lbl_contact = Label(ContactForm, text="Contact", font=('arial', 14), bd=5)
    lbl_contact.grid(row=5, sticky=W)
    #===================ENTRY===============================
    name = Entry(ContactForm, textvariable=NAME, font=('arial', 14))
    name.grid(row=0, column=1)
    age = Entry(ContactForm, textvariable=AGE, font=('arial', 14))
    age.grid(row=1, column=1)
    tickets = Entry(ContactForm, textvariable=TICKETS, font=('arial', 14))
    tickets.grid(row=2, column=1)
    ticket_id = Entry(ContactForm, textvariable=TICKET_ID,  font=('arial', 14))
    ticket_id.grid(row=3, column=1)
    price = Entry(ContactForm, textvariable=PRICE,  font=('arial', 14))
    price.grid(row=4, column=1)
    contact = Entry(ContactForm, textvariable=CONTACT,  font=('arial', 14))
    contact.grid(row=5, column=1)
    #==================BUTTONS==============================
    btn_updatecon = Button(ContactForm, text="Update", width=50, command=UpdateData)
    btn_updatecon.grid(row=6, columnspan=2, pady=10)
def DeleteData():
    if not tree.selection():
       result = tkMessageBox.showwarning('', 'Please Select Something First!', icon="warning")
    else:
        result = tkMessageBox.askquestion('', 'Are you sure you want to delete this record?', icon="warning")
        if result == 'yes':
            curItem = tree.focus()
            contents =(tree.item(curItem))
            selecteditem = contents['values']
            tree.delete(curItem)
            conn = sqlite3.connect("record.db")
            cursor = conn.cursor()
            cursor.execute("DELETE FROM `info` WHERE `mem_id` = %d" % selecteditem[0])
            conn.commit()
            cursor.close()
            conn.close()
def AddNew():
    global NewWindow
    NAME.set("")
    AGE.set("")
    TICKETS.set("")
    TICKET_ID.set("")
    PRICE.set("")
    CONTACT.set("")
    NewWindow = Toplevel()
    NewWindow.title("Contact List")
    width = 400
    height = 300
    screen_width = root.winfo_screenwidth()
    screen_height = root.winfo_screenheight()
    x = ((screen_width/2) - 455) - (width/2)
    y = ((screen_height/2) + 20) - (height/2)
    NewWindow.resizable(0, 0)
    NewWindow.geometry("%dx%d+%d+%d" % (width, height, x, y))
    if 'UpdateWindow' in globals():
        UpdateWindow.destroy()
    #===================FRAMES==============================
    FormTitle = Frame(NewWindow)
    FormTitle.pack(side=TOP)
    ContactForm = Frame(NewWindow)
    ContactForm.pack(side=TOP, pady=10)
    #===================LABELS==============================
    lbl_title = Label(FormTitle, text="INVOICE", font=('arial', 16), bg="#66ff66",  width = 300)
    lbl_title.pack(fill=X)
    lbl_name = Label(ContactForm, text="Name", font=('arial', 14), bd=5)
    lbl_name.grid(row=0, sticky=W)
    lbl_age = Label(ContactForm, text="Age", font=('arial', 14), bd=5)
    lbl_age.grid(row=1, sticky=W)
    lbl_tickets = Label(ContactForm, text="Tickets", font=('arial', 14), bd=5)
    lbl_tickets.grid(row=2, sticky=W)
    lbl_ticket_id = Label(ContactForm, text="Ticket_id", font=('arial', 14), bd=5)
    lbl_ticket_id.grid(row=3, sticky=W)
    lbl_price = Label(ContactForm, text="Price", font=('arial', 14), bd=5)
    lbl_price.grid(row=4, sticky=W)
    lbl_contact = Label(ContactForm, text="Contact", font=('arial', 14), bd=5)
    lbl_contact.grid(row=5, sticky=W)
    #===================ENTRY===============================
    name = Entry(ContactForm, textvariable=NAME, font=('arial', 14))
    name.grid(row=0, column=1)
    age = Entry(ContactForm, textvariable=AGE, font=('arial', 14))
    age.grid(row=1, column=1)
    tickets = Entry(ContactForm, textvariable=TICKETS, font=('arial', 14))
    tickets.grid(row=2, column=1)
    ticket_id = Entry(ContactForm, textvariable=TICKET_ID,  font=('arial', 14))
    ticket_id.grid(row=3, column=1)
    price = Entry(ContactForm, textvariable=PRICE,  font=('arial', 14))
    price.grid(row=4, column=1)
    contact = Entry(ContactForm, textvariable=CONTACT,  font=('arial', 14))
    contact.grid(row=5, column=1)
    #==================BUTTONS==============================
    btn_addcon = Button(ContactForm, text="Save", width=50, command=SubmitData)
    btn_addcon.grid(row=6, columnspan=2, pady=10)
def btnClearisplay():
    global operator
    operator=''
    text_Input.set('')
def btnEqualsInput():
    global operator
    sumup=str(eval(operator))
    text_Input.set(sumup)
    operator=''
def ExitApplication():
    MsgBox = tk.messagebox.askquestion ('Exit Application','Are you sure you want to exit the application',icon = 'warning')
    if MsgBox == 'yes':
       root.destroy()
    else:
        tk.messagebox.showinfo('Return','You will now return to the application screen')
def Travel_cost():
    if (var9.get()=='Kanpur' and var1.get()==1 and var4.get()==1):
        Tcost=float(123)
        single=int(var12.get())
        Adult_Tax ="₹ "+str('%.2f'%((Tcost * single)*0.03))
        Adult_Fees ="₹ "+str('%.2f'%(Tcost * single))
        TotalCost = "₹ "+str('%.2f'%((Tcost * single)+ ((Tcost * single)*0.03))) 
        Tax.set(Adult_Tax)
        SubTotal.set(Adult_Fees)
        Ticketclass.set("Standard") 
        TicketPrice.set(TotalCost) 
        Child_Ticket.set("No")
        Adult_Ticket.set("Yes")
        From_Destination.set("Jaipur")
        To_Destination.set("Kanpur")
        Fee_Price.set(single)
        Total.set(TotalCost) 
        Route.set("Direct")

        x = random.randint(109, 5876) 
        randomRef = str(x)
        Receipt_Ref.set("TFL"+ randomRef)
    elif (var9.get() == "Kanpur" and var1.get() == 1 and var4.get() == 2 ):
        Tcost = float(110)
        single = int(var12.get())
        Child_Tax ="₹ "+str('%.2f'%(Tcost * 0))
        Child_Fees ="₹ "+str('%.2f'%(Tcost * single))
        TotalCost = "₹ "+str('%.2f'%((Tcost * single)+ (Tcost * 0))) 
        Tax.set(Child_Tax)
        SubTotal.set(Child_Fees) 
        Ticketclass.set("Standard") 
        TicketPrice.set(TotalCost) 
        Child_Ticket.set("Yes") 
        Adult_Ticket.set("No")
        From_Destination.set("Jaipur")
        To_Destination.set("Kanpur")
        Fee_Price.set(single)
        Total.set(TotalCost) 
        Route.set("Direct")

        x = random.randint(109, 5876) 
        randomRef = str(x)
        Receipt_Ref.set("TFL"+ randomRef)
    elif (var9.get()=='Kanpur' and var1.get()==2 and var4.get()==1):
        Tcost=float(160)
        single=int(var12.get())
        Adult_Tax ="₹ "+str('%.2f'%((Tcost * single)*0.03))
        Adult_Fees ="₹ "+str('%.2f'%(Tcost * single))
        TotalCost = "₹ "+str('%.2f'%((Tcost * single)+ ((Tcost * single)*0.03))) 
        Tax.set(Adult_Tax)
        SubTotal.set(Adult_Fees)
        Ticketclass.set("Economy") 
        TicketPrice.set(TotalCost) 
        Child_Ticket.set("No")
        Adult_Ticket.set("Yes")
        From_Destination.set("Jaipur")
        To_Destination.set("Kanpur")
        Fee_Price.set(single)
        Total.set(TotalCost) 
        Route.set("Direct")

        x = random.randint(109, 5876) 
        randomRef = str(x)
        Receipt_Ref.set("TFL"+ randomRef)
    elif (var9.get() == "Kanpur" and var1.get() == 2 and var4.get() == 2 ):
        Tcost = float(150)
        single = int(var12.get())
        Child_Tax ="₹ "+str('%.2f'%(Tcost * 0))
        Child_Fees ="₹ "+str('%.2f'%(Tcost * single))
        TotalCost = "₹ "+str('%.2f'%((Tcost * single)+ (Tcost * 0))) 
        Tax.set(Child_Tax)
        SubTotal.set(Child_Fees) 
        Ticketclass.set("Economy") 
        TicketPrice.set(TotalCost) 
        Child_Ticket.set("Yes") 
        Adult_Ticket.set("No")
        From_Destination.set("Jaipur")
        To_Destination.set("Kanpur")
        Fee_Price.set(single)
        Total.set(TotalCost) 
        Route.set("Direct")

        x = random.randint(109, 5876) 
        randomRef = str(x)
        Receipt_Ref.set("TFL"+ randomRef)
    elif (var9.get() == "Kota" and var1.get() == 1 and var4.get() == 1 ):
        Tcost = float(125)
        single = int(var12.get())
        Adult_Tax ="₹ "+str('%.2f'%(Tcost * 0.03))
        Adult_Fees ="₹ "+str('%.2f'%(Tcost * single))
        TotalCost = "₹ "+str('%.2f'%((Tcost * single)+ (Tcost * single)*0.03)) 
        Tax.set(Adult_Tax)
        SubTotal.set(Adult_Fees) 
        Ticketclass.set("Standard") 
        TicketPrice.set(TotalCost) 
        Child_Ticket.set("No") 
        Adult_Ticket.set("Yes")
        From_Destination.set("Jaipur")
        To_Destination.set("Kota")
        Fee_Price.set(single)
        Total.set(TotalCost) 
        Route.set("Direct")

        x = random.randint(109, 5876) 
        randomRef = str(x)
        Receipt_Ref.set("TFL"+ randomRef)
    elif (var9.get() == "Kota" and var1.get() == 1 and var4.get() == 2 ):
        Tcost = float(100)
        single = int(var12.get())
        Child_Tax ="₹ "+str('%.2f'%(Tcost * 0))
        Child_Fees ="₹ "+str('%.2f'%(Tcost * single))
        TotalCost = "₹ "+str('%.2f'%((Tcost * single)+ (Tcost * 0))) 
        Tax.set(Child_Tax)
        SubTotal.set(Child_Fees) 
        Ticketclass.set("Standard") 
        TicketPrice.set(TotalCost) 
        Child_Ticket.set("Yes") 
        Adult_Ticket.set("No")
        From_Destination.set("Jaipur")
        To_Destination.set("Kota")
        Fee_Price.set(single)
        Total.set(TotalCost) 
        Route.set("Direct")

        x = random.randint(109, 5876) 
        randomRef = str(x)
        Receipt_Ref.set("TFL"+ randomRef)
    elif (var9.get()=='Kota' and var1.get()==2 and var4.get()==1):
        Tcost=float(200)
        single=int(var12.get())
        Adult_Tax ="₹ "+str('%.2f'%((Tcost * single)*0.03))
        Adult_Fees ="₹ "+str('%.2f'%(Tcost * single))
        TotalCost = "₹ "+str('%.2f'%((Tcost * single)+ ((Tcost * single)*0.03))) 
        Tax.set(Adult_Tax)
        SubTotal.set(Adult_Fees)
        Ticketclass.set("Economy") 
        TicketPrice.set(TotalCost) 
        Child_Ticket.set("No")
        Adult_Ticket.set("Yes")
        From_Destination.set("Jaipur")
        To_Destination.set("Kota")
        Fee_Price.set(single)
        Total.set(TotalCost) 
        Route.set("Direct")

        x = random.randint(109, 5876) 
        randomRef = str(x)
        Receipt_Ref.set("TFL"+ randomRef)
    elif (var9.get() == "Kota" and var1.get() == 2 and var4.get() == 2 ):
        Tcost = float(140)
        single = int(var12.get())
        Child_Tax ="₹ "+str('%.2f'%(Tcost * 0))
        Child_Fees ="₹ "+str('%.2f'%(Tcost * single))
        TotalCost = "₹ "+str('%.2f'%((Tcost * single)+ (Tcost * 0))) 
        Tax.set(Child_Tax)
        SubTotal.set(Child_Fees) 
        Ticketclass.set("Economy") 
        TicketPrice.set(TotalCost) 
        Child_Ticket.set("Yes") 
        Adult_Ticket.set("No")
        From_Destination.set("Jaipur")
        To_Destination.set("Kota")
        Fee_Price.set(single)
        Total.set(TotalCost) 
        Route.set("Direct")

        x = random.randint(109, 5876) 
        randomRef = str(x)
        Receipt_Ref.set("TFL"+ randomRef)
def Reset():
    Tax.set('0')
    var1.set('0')
    var2.set('0')
    var3.set('0')
    var4.set('0')
    var5.set('0')
    var6.set('0')
    var7.set('0')
    var8.set('0')
    var9.set('0')
    var10.set('0')
    var11.set('0')
    var12.set('0')
    SubTotal.set('0')
    Total.set('0')
    Ticketclass.set(" ")
    TicketPrice.set(" ")
    Child_Ticket.set(" ")
    Adult_Ticket.set(" ")
    From_Destination.set(" ")
    To_Destination.set(" ")
    Fee_Price.set(" ")
    Route.set(" ")
    Receipt_Ref.set(" ")

#----------------------------Variables-----------------------------------
NAME = StringVar()
AGE = StringVar()
TICKETS = StringVar()
TICKET_ID = StringVar()
PRICE = StringVar()
CONTACT = StringVar()
var1=IntVar()
var2=IntVar()
var3=IntVar()
var4=IntVar()
var5=IntVar()
var6=StringVar()
var7=StringVar()
var8=StringVar()
var9=StringVar()
var10=IntVar()
var11=IntVar()
var12=IntVar()
Tax=StringVar()

SubTotal=StringVar()
Total=StringVar()
text_Input=StringVar()

var1.set('0')
var2.set('0')
var3.set('0')
var4.set('0')
var5.set('0')
var6.set('0')
var7.set('0')
var8.set('0')
var9.set('0')
var10.set('0')
var11.set('0')
var12.set('0')
SubTotal.set('0')
Total.set('0')

operator=''
#----------------------------Date and Time-------------------------------
Date1.set(time.strftime('%d/%m/%Y'))
timer.set(time.strftime('%H:%M:%S'))
#----------------------------Create Widget topLeft1----------------------
lblClass=Label(topLeft1,font=('arial',22,'bold'),text='Class',background='orange',bd=8)
lblClass.grid(row=0,column=0,sticky=W)
chkStandard=Radiobutton(topLeft1,font=('arial',20,'bold'),text='Standard',background='orange',variable=var1,value=1)
chkStandard.grid(row=1,column=0,sticky=W)
chkEconomy=Radiobutton(topLeft1,font=('arial',20,'bold'),text='Economy',background='orange',variable=var1,value=2)
chkEconomy.grid(row=2,column=0,sticky=W)
#----------------------------Create Widget topLeft2----------------------
lblSelect=Label(topLeft3,font=('arial',16,'bold'),text='Select a Destination',background='light blue',bd=8)
lblSelect.grid(row=0,column=0,sticky=W,columnspan=2)
lblDestination=Label(topLeft3,font=('arial',16,'bold'),text='Destination',background='light blue',bd=8)
lblDestination.grid(row=1,column=0,sticky=W)
cboDestination=ttk.Combobox(topLeft3,textvariable=var9,state='readonly',font=('arial',12,'bold'),width=7)
cboDestination['value']=('','Kanpur','Kota')
cboDestination.current(0)
cboDestination.grid(row=1,column=1)

chkAdult=Radiobutton(topLeft3,font=('arial',16,'bold'),text='Adult',background='light blue',variable=var4,value=1)
chkAdult.grid(row=2,column=0,sticky=W)
chkChild=Radiobutton(topLeft3,font=('arial',16,'bold'),text='Child',background='light blue',variable=var4,value=2)
chkChild.grid(row=3,column=0,sticky=W)
#-----------------------------------Tickets------------------------------
lblClass=Label(topLeft2,font=('arial',30,'bold'),text='Tickets',background='yellow',bd=8)
lblClass.grid(row=4,column=0)
lblTickets_no=Label(topLeft2,font=('arial',25,'bold'),text='No. of tickets',background='yellow')
lblTickets_no.grid(row=5,column=0)
entOneWay=Entry(topLeft2,font=('arial',20,'bold'),textvariable=var12,bd=2,width=8)
entOneWay.grid(row=6,column=0)
#-------------------------Tax,Subtotal,Total-----------------------------
lblStateTax=Label(bottomLeft1,font=('arial',15,'bold'),text='State Tax',background='light green',bd=10,anchor='w')
lblStateTax.grid(row=3,column=3)
txtStateTax=Entry(bottomLeft1,font=('arial',10,'bold'),textvariable=Tax,bd=10,insertwidth=4,bg='white',justify='right')
txtStateTax.grid(row=3,column=4)

lblSubTotal=Label(bottomLeft1,font=('arial',15,'bold'),text='Sub Total',background='light green',bd=10,anchor='w')
lblSubTotal.grid(row=5,column=3)
txtSubTotal=Entry(bottomLeft1,font=('arial',10,'bold'),textvariable=SubTotal,bd=10,insertwidth=4,bg='white',justify='right')
txtSubTotal.grid(row=5,column=4)

lblTotalCost=Label(bottomLeft1,font=('arial',15,'bold'),text='Total Cost',background='light green',bd=10,anchor='w')
lblTotalCost.grid(row=7,column=3)
txtTotalCost=Entry(bottomLeft1,font=('arial',10,'bold'),textvariable=Total,bd=10,insertwidth=4,bg='white',justify='right')
txtTotalCost.grid(row=7,column=4)
#------------------Informations-------
lblReceipt=Button(frameBottomRight,font=('arial',9,'bold'),text='Invoice Entry',background='light blue',bd=2,command=AddNew,relief="raised",anchor='w')
lblReceipt.grid(row=9,column=0,sticky=W)
lblDelete=Button(frameBottomRight,font=('arial',9,'bold'),text='Delete Data',background='light blue',bd=2,command=DeleteData,relief="raised",anchor='w')
lblDelete.grid(row=9,column=3,sticky=W)
#------------------Buttons-----------
btnTotal = Button(frameBottomRight, text='Total', padx=2, pady=2, bd=3, fg="black",background='red', font=('Arial Rounded MT', 8, 'bold'), width= 4, height=1,command=Travel_cost).grid(row=7,column=0) 
btnClear = Button(frameBottomRight, text='Clear', padx=2, pady=2, bd=3, fg="black", background='red',font=('Arial Rounded MT',8, 'bold'), width= 4, height=1,command=Reset).grid(row=7,column=1)
btnReset = Button(frameBottomRight, text='Reset', padx=2, pady=2, bd=3, fg="black",background='red', font=('Arial Rounded MT',8, 'bold'), width= 4, height=1,command=Reset).grid(row=7,column=2)
btnExit = tk.Button (frameBottomRight, text='Exit',padx=2, pady=2, bd=3, fg="black",background='red',font=('Arial Rounded MT',8, 'bold'),command=ExitApplication)
btnExit.grid(row=7,column=3)
#----------------------Database Frame
Top = Frame(bottomLeft2, width=500, bd=1, relief=SOLID)
Top.pack(side=TOP)
TableMargin = Frame(bottomLeft2, width=500)
TableMargin.pack(side=RIGHT)
lbl_title = Label(Top, text="INVOICE", font=('arial', 16), width=10)
lbl_title.pack(fill=X)
scrollbarx = Scrollbar(TableMargin, orient=HORIZONTAL)
scrollbary = Scrollbar(TableMargin, orient=VERTICAL)
tree = ttk.Treeview(TableMargin, columns=("MemberID", "Name", "Age", "Tickets", "Ticket_id", "Price", "Contact"), height=400, selectmode="extended", yscrollcommand=scrollbary.set, xscrollcommand=scrollbarx.set)
scrollbary.config(command=tree.yview)
scrollbary.pack(side=RIGHT, fill=Y)
scrollbarx.config(command=tree.xview)
scrollbarx.pack(side=BOTTOM, fill=X)
tree.heading('MemberID', text="MemberID", anchor=W)
tree.heading('Name', text="Name", anchor=W)
tree.heading('Age', text="Age", anchor=W)
tree.heading('Tickets', text="Tickets", anchor=W)
tree.heading('Ticket_id', text="Ticket_id", anchor=W)
tree.heading('Price', text="Price", anchor=W)
tree.heading('Contact', text="Contact", anchor=W)
tree.column('#0', stretch=NO, minwidth=0, width=0)
tree.column('#1', stretch=NO, minwidth=0, width=0)
tree.column('#2', stretch=NO, minwidth=0, width=80)
tree.column('#3', stretch=NO, minwidth=0, width=120)
tree.column('#4', stretch=NO, minwidth=0, width=90)
tree.column('#5', stretch=NO, minwidth=0, width=80)
tree.column('#6', stretch=NO, minwidth=0, width=120)
tree.column('#7', stretch=NO, minwidth=0, width=120)
tree.pack()
tree.bind('<Double-Button-1>', OnSelected)
#----------------------------------
Database()
root.mainloop()